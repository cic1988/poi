#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#
# Export POI in JSON file with given file name
#
# Run the script with Python 3
#
# Copyright(c) 2017 NavVis GmbH
# All right reserved.
#
# \author Yuan Gao <yuan.gao@navvis.com>
#

import argparse
import json
import os
import sys
import urllib

# Change the path if you have installed DatabaseAPI3.py elsewhere
sys.path.append('/opt/NavVis/tools/scripts')
from DatabaseAPI3 import *

if __name__ == "__main__":
	default_url = 'http://localhost:8080/iv'
	default_auth = 'admin:ivadmin'

	description = 'Exports POIs to a JSON file.'
	epilog = """ Arguments for login:
	<url>:
	use --url=<url> to specify the instance url.
	default: %s

	<authentication>:
	use --auth=<authentication> to specify the login - username:password
	default: %s
	""" % (default_url, default_auth)

	from argparse import RawTextHelpFormatter
	parser = argparse.ArgumentParser(description = description, epilog = epilog, formatter_class = RawTextHelpFormatter)

	parser.add_argument('--url', dest = "url", default = default_url, help = 'instance url')
	parser.add_argument('--auth', default = default_auth, help = 'IV authentication: username:password')

	args = parser.parse_args()

	if args.auth is not None:
		auth = args.auth.split(":")
	else:
		auth = [None, None]

	# Login
	api = DatabaseAPI(args.url, auth[0], auth[1])

	api.login()

	# TODO: Hack to ensure the login
	if api.jwt_token is not None:
		# get the export file as input
		filename = input("enter the export file name: ")

		doExport = True

		# check if file exists
		if os.path.exists(filename) == True:
    			doExport = input("%s exists, are you sure to overwrite it? y(yes): " % (filename)) == "y"

		if doExport is True:
			with open(filename, 'w') as outputfile:
				json.dump(api.get('api/pois'), outputfile)
				print("... finish export")
		else:
			print("... give up overwritting %s" % (filename))
	else:
		print("abort... login failed %s:%s" % (auth[0], auth[1]))

